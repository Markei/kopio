<?php

// autoload_runtime.php @generated by Symfony Runtime

$scriptFileName = $_SERVER['APP_SCRIPT_FILENAME'] ?? $_SERVER['SCRIPT_FILENAME'] ?? null;

if (true === (require_once __DIR__.'/autoload.php') || null === $scriptFileName || '' === $scriptFileName) {
    return;
}

////// fix for missing Phar class
echo 'Loaded INI file: ' . php_ini_loaded_file() . PHP_EOL;
echo 'Scanned INI files: ' . php_ini_scanned_files() . PHP_EOL;
echo 'ENV dump: ' . PHP_EOL;
print_r($_ENV);
$pharPath = '';
if (class_exists('Phar', false)) {
    $pharPath = Phar::running();
} else {
    echo 'Phar class not found, declared classes:' . PHP_EOL;
    print_r(get_declared_classes());
    echo 'PHP version:' . PHP_EOL;
    print_r(phpversion());
    echo 'Loaded extension:' . PHP_EOL;
    print_r(get_loaded_extensions());
}
////// end

////// dump info about paths
var_dump($pharPath, $scriptFileName);
////// end

if (strlen($pharPath) > 0 && !str_starts_with($scriptFileName, 'phar://')) {
    $scriptFileName = $pharPath.DIRECTORY_SEPARATOR.$scriptFileName;
}

$app = require $scriptFileName;

if (!is_object($app)) {
    throw new TypeError(sprintf('Invalid return value: callable object expected, "%s" returned from "%s".', get_debug_type($app), $_SERVER['SCRIPT_FILENAME']));
}

$runtime = $_SERVER['APP_RUNTIME'] ?? $_ENV['APP_RUNTIME'] ?? %runtime_class%;
$runtime = new $runtime(($_SERVER['APP_RUNTIME_OPTIONS'] ?? $_ENV['APP_RUNTIME_OPTIONS'] ?? []) + %runtime_options%);

[$app, $args] = $runtime
    ->getResolver($app)
    ->resolve();

$app = $app(...$args);

exit(
    $runtime
        ->getRunner($app)
        ->run()
);